// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../src/@generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Product models
model Product {
  id                String           @id @default(cuid())
  name              String
  description       String?
  type              ProductType      @default(REGULAR)
  // Relationships
  productCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int?
  productVariants   ProductVariant[]
  taxRate           TaxRate?         @relation(fields: [taxRateId], references: [id])
  taxRateId         Int?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

model ProductVariant {
  id          String   @id @default(cuid())
  name        String
  description String?
  sku         String?
  weight      Decimal? @db.Decimal(10, 4)
  available   Boolean  @default(true)
  price       Decimal  @db.Decimal(12, 2)
  salePrice   Decimal? @db.Decimal(12, 2)
  // Relationships
  productId   String
  product     Product  @relation(fields: [productId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Product categories
model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  // Relationships
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Tax rate
model TaxRate {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  rate        Decimal   @db.Decimal(12, 1)
  // Relationships
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum ProductType {
  REGULAR
  DIGITAL
}
