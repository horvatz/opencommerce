# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductCategory {
  id: ID!
  name: String!
  description: String
}

type ProductVariant {
  id: ID!
  name: String!
  description: String
  sku: String
  weight: Decimal
  available: Boolean!
  price: Decimal!
  salePrice: Decimal
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

type TaxRate {
  id: ID!
  name: String!
  description: String
  rate: Decimal!
}

type Product {
  id: ID!
  name: String!
  description: String
  type: ProductType!
  categories: [ProductCategory!]
  variants: [ProductVariant!]
  taxRate: TaxRate
}

enum ProductType {
  REGULAR
  DIGITAL
}

type Country {
  id: ID!
  name: String!
  code: String!
}

type Address {
  id: ID!
  firstName: String!
  lastName: String!
  streetAddress: String!
  zipCode: String!
  city: String!
  country: Country!
  phone: String
  companyName: String
  vatNumber: String
}

type CheckoutItem {
  id: ID!
  quantity: Int!
  variant: ProductVariant!
}

type ShippingMethod {
  id: ID!
  name: String!
  description: String
  minDeliveryDays: Int
  maxDeliveryDays: Int
  price: Decimal!
  active: Boolean!
}

type Checkout {
  id: ID!
  note: String
  completed: Boolean!
  items: [CheckoutItem!]
  shippingAddress: Address
  billingAddress: Address
  shippingMethod: ShippingMethod
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TestEndpoint {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  products: [Product!]!
  product(
    """ID of the product"""
    id: String!
  ): Product!
  checkout(
    """ID of the checkout"""
    id: String!
  ): Checkout!
  testEndpoint(id: Int!): TestEndpoint!
}

type Mutation {
  checkoutShippingAddressUpdate(
    """ID of the checkout"""
    id: String!

    """Address with pre-defined country"""
    address: CreateAddressInput!
  ): Checkout!
  checkoutBillingAddressUpdate(
    """ID of the checkout"""
    id: String!

    """Address with pre-defined country"""
    address: CreateAddressInput!
  ): Checkout!
  checkoutComplete(
    """ID of the checkout"""
    id: String!
  ): Checkout!
  createTestEndpoint(createTestEndpointInput: CreateTestEndpointInput!): TestEndpoint!
  updateTestEndpoint(updateTestEndpointInput: UpdateTestEndpointInput!): TestEndpoint!
  removeTestEndpoint(id: Int!): TestEndpoint!
}

input CreateAddressInput {
  firstName: String!
  lastName: String!
  streetAddress: String!
  zipCode: String!
  city: String!

  """Pre-defined country"""
  country: CountryInput!
  companyName: String
  vatNumber: String
}

input CountryInput {
  code: String!
  name: String
}

input CreateTestEndpointInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateTestEndpointInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}